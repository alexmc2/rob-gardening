/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type TestimonialsCarousel = {
  _type: "testimonials-carousel";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  sectionId?: string;
  eyebrow?: string;
  heading?: string;
  intro?: string;
  testimonials?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
  cta?: Link;
  enableFadeIn?: boolean;
};

export type LottieAnimation = {
  _type: "lottie-animation";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  colorVariantDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  sectionWidth?: "default" | "narrow";
  animationAlign?: "left" | "center" | "right";
  verticalSpacing?: "none" | "tight" | "compact" | "comfortable" | "roomy";
  animationSize?: "small" | "medium" | "large" | "full";
  title?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  textOrientation?: "vertical" | "horizontal";
  textPlacement?: "before" | "after";
  textSpacing?: "none" | "tight" | "compact" | "comfortable" | "roomy";
  animation?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  animationDark?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  ariaLabel?: string;
  enableFadeIn?: boolean;
};

export type MenuGoogleSection = {
  _type: "menu-google-section";
  padding?: SectionPadding;
  sectionId?: string;
  eyebrow?: string;
  title?: string;
  intro?: string;
  accordionBehaviour?: "expanded" | "first-open";
  headingAlignment?: "left" | "center";
  appearance?: {
    backgroundColor?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    backgroundColorDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    panelColor?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    panelColorDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    accentColor?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    accentColorDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    headingColor?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    headingColorDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    tabColor?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    tabColorDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    categoryColor?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    categoryColorDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    borderColor?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    borderColorDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  };
  categories?: Array<{
    title?: string;
    tagline?: string;
    itemEntryMode?: "structured" | "text";
    items?: Array<{
      name?: string;
      price?: string;
      description?: string;
      dietary?: Array<string>;
      _type: "menuGoogleItem";
      _key: string;
    }>;
    rawItems?: string;
    _type: "menuGoogleCategory";
    _key: string;
  }>;
  enableFadeIn?: boolean;
};

export type MenuSection = {
  _type: "menu-section";
  padding?: SectionPadding;
  background?: {
    style?: "color" | "texture" | "image";
    colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    texturePreset?: "paper" | "canvas" | "linen";
    textureTint?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    customImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      opacity?: number;
      _type: "image";
    };
  };
  eyebrow?: string;
  title?: string;
  sectionId?: string;
  intro?: string;
  headingFont?: "sans" | "serif";
  displayMode?: "structured" | "image" | "combined";
  menuImages?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    focus?: string;
    _type: "menuImage";
    _key: string;
  }>;
  imagePlacement?: "right" | "left" | "split";
  imageLayout?: "stacked" | "inline";
  categories?: Array<{
    title?: string;
    description?: string;
    items?: Array<{
      name?: string;
      description?: string;
      price?: string;
      itemImage?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      };
      dietary?: string;
      _type: "menuItem";
      _key: string;
    }>;
    _type: "menuCategory";
    _key: string;
  }>;
  lottieAnimation?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  lottiePlacement?: "heading" | "aside";
  enableFadeIn?: boolean;
};

export type AllPosts = {
  _type: "all-posts";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  enableFadeIn?: boolean;
};

export type LocationMap = {
  _type: "location-map";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  heading?: string;
  headingAlignment?: "left" | "center" | "right";
  locationLabel?: string;
  locationName?: string;
  address?: string;
  latitude?: number;
  longitude?: number;
  mapZoom?: number;
  enableFadeIn?: boolean;
};

export type FormContactMap = {
  _type: "form-contact-map";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  heading?: string;
  body?: string;
  formspreeFormId?: string;
  submitButtonLabel?: string;
  successMessage?: string;
  locationName?: string;
  address?: string;
  latitude?: number;
  longitude?: number;
  mapZoom?: number;
  enableFadeIn?: boolean;
};

export type FormBookingCalendar = {
  _type: "form-booking-calendar";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  heading?: string;
  body?: string;
  calendarIntro?: string;
  bookingSettings?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "bookingSettings";
  }>;
  services?: Array<string>;
  noticePeriodDays?: number;
  advanceWindowDays?: number;
  availabilityNote?: string;
  submitButtonLabel?: string;
  successMessage?: string;
  outOfAreaMessage?: string;
  enableFadeIn?: boolean;
};

export type FormBooking = {
  _type: "form-booking";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  heading?: string;
  body?: string;
  bookingSettings?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "bookingSettings";
  }>;
  services?: Array<string>;
  availabilityNote?: string;
  submitButtonLabel?: string;
  successMessage?: string;
  outOfAreaMessage?: string;
  enableFadeIn?: boolean;
};

export type FormContact = {
  _type: "form-contact";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  heading?: string;
  body?: string;
  formspreeFormId?: string;
  submitButtonLabel?: string;
  successMessage?: string;
  enableFadeIn?: boolean;
};

export type FormNewsletter = {
  _type: "form-newsletter";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  stackAlign?: "left" | "center";
  consentText?: string;
  buttonText?: string;
  successMessage?: string;
  enableFadeIn?: boolean;
};

export type Faqs = {
  _type: "faqs";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  faqs?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "faq";
  }>;
  enableFadeIn?: boolean;
};

export type LogoCloud1 = {
  _type: "logo-cloud-1";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  title?: string;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  enableFadeIn?: boolean;
};

export type Cta1 = {
  _type: "cta-1";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  sectionWidth?: "default" | "narrow";
  stackAlign?: "left" | "center";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  links?: Array<{
    _key: string;
  } & Link>;
  enableFadeIn?: boolean;
};

export type Timelines1 = {
  _type: "timelines-1";
  title?: string;
  tagLine?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
};

export type TimelineRow = {
  _type: "timeline-row";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  timelines?: Array<{
    _key: string;
  } & Timelines1>;
  enableFadeIn?: boolean;
};

export type BeforeAfterGallery = {
  _type: "before-after-gallery";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  heading?: string;
  intro?: string;
  items?: Array<{
    title?: string;
    description?: string;
    beforeLabel?: string;
    afterLabel?: string;
    beforeImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    afterImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _type: "comparison";
    _key: string;
  }>;
  enableFadeIn?: boolean;
};

export type CloudinaryGallery = {
  _type: "cloudinary-gallery";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  heading?: string;
  intro?: string;
  folderPrefix?: string;
  dateOrder?: "desc" | "asc";
  images?: Array<{
    _key: string;
  } & CloudinaryGalleryImage>;
  enableFadeIn?: boolean;
};

export type ImageGallery = {
  _type: "image-gallery";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  heading?: string;
  intro?: string;
  desktopColumns?: "three" | "two";
  dateOrder?: "desc" | "asc";
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
    _key: string;
  }>;
  enableFadeIn?: boolean;
};

export type Carousel2 = {
  _type: "carousel-2";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  testimonial?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
  enableFadeIn?: boolean;
};

export type Carousel1 = {
  _type: "carousel-1";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  size?: "one" | "two" | "three";
  indicators?: "none" | "dots" | "count";
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  enableFadeIn?: boolean;
};

export type ShopBrowser = {
  _type: "shop-browser";
  hero?: {
    enabled?: boolean;
    eyebrow?: string;
    heading?: string;
    subheading?: string;
  };
  overview?: {
    label?: string;
    summaryTemplate?: string;
  };
  toolbar?: {
    sortLabel?: string;
    sortOptions?: Array<{
      label?: string;
      value?: "featured" | "price-asc" | "price-desc" | "title-asc";
      _type: "sortOption";
      _key: string;
    }>;
    views?: {
      gridLabel?: string;
      listLabel?: string;
    };
  };
  grid?: {
    columns?: 2 | 3 | 4;
    showComparePrice?: boolean;
    showQuickView?: boolean;
    cardLayout?: "card" | "stacked";
  };
  emptyState?: {
    heading?: string;
    body?: string;
  };
  selection?: {
    mode?: "all" | "manual" | "collection";
    products?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "product";
    }>;
    collection?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "collection";
    };
  };
  categoryFilters?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "collection";
  }>;
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
};

export type ProductGrid = {
  _type: "product-grid";
  heading?: string;
  description?: string;
  selection?: {
    mode?: "manual" | "collection";
    products?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "product";
    }>;
    collection?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "collection";
    };
  };
  displayOptions?: {
    columns?: 2 | 3 | 4;
    showComparePrice?: boolean;
    showQuickView?: boolean;
    cardLayout?: "card" | "stacked";
  };
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
};

export type GridRow = {
  _type: "grid-row";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  gridColumns?: "grid-cols-2" | "grid-cols-3" | "grid-cols-4";
  columns?: Array<{
    _key: string;
  } & GridCard | {
    _key: string;
  } & GridPost | {
    _key: string;
  } & PricingCard | {
    _key: string;
  } & RichTextBlock>;
  enableFadeIn?: boolean;
};

export type GridPost = {
  _type: "grid-post";
  post?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
};

export type PricingCard = {
  _type: "pricing-card";
  title?: string;
  tagLine?: string;
  price?: {
    value?: number;
    period?: string;
  };
  list?: Array<string>;
  excerpt?: string;
  link?: Link;
};

export type GridCard = {
  _type: "grid-card";
  title?: string;
  excerpt?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  link?: Link;
};

export type SplitLocationMap = {
  _type: "split-location-map";
  heading?: string;
  headingAlignment?: "left" | "center" | "right";
  locationLabel?: string;
  locationName?: string;
  address?: string;
  latitude?: number;
  longitude?: number;
  mapZoom?: number;
};

export type SplitContactForm = {
  _type: "split-contact-form";
  heading?: string;
  body?: string;
  formspreeFormId?: string;
  submitButtonLabel?: string;
  successMessage?: string;
};

export type SplitInfo = {
  _type: "split-info";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  tags?: Array<string>;
};

export type SplitInfoList = {
  _type: "split-info-list";
  list?: Array<{
    _key: string;
  } & SplitInfo>;
};

export type SplitImage = {
  _type: "split-image";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  imageLight?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  imageDark?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  imageSize?: "sm" | "md" | "lg" | "xl";
  imageShape?: "rounded" | "square" | "circle";
  aspectRatio?: "auto" | "square" | "portrait" | "landscape";
};

export type SplitCard = {
  _type: "split-card";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  imageSize?: "sm" | "md" | "lg";
  imageShape?: "rounded" | "square" | "circle";
  sizeBasis?: "text" | "image";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
};

export type SplitCardsList = {
  _type: "split-cards-list";
  list?: Array<{
    _key: string;
  } & SplitCard>;
};

export type SplitContent = {
  _type: "split-content";
  sticky?: boolean;
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  link?: Link;
};

export type SplitRow = {
  _type: "split-row";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  colorVariantDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  sectionId?: string;
  noGap?: boolean;
  splitColumns?: Array<{
    _key: string;
  } & SplitContent | {
    _key: string;
  } & SplitCardsList | {
    _key: string;
  } & SplitImage | {
    _key: string;
  } & SplitInfoList | {
    _key: string;
  } & RichTextBlock | {
    _key: string;
  } & SplitContactForm | {
    _key: string;
  } & SplitLocationMap>;
  enableFadeIn?: boolean;
};

export type RichTextBlock = {
  _type: "rich-text-block";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  colorVariantDark?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  contentWidth?: "narrow" | "default" | "wide" | "full";
  textAlign?: "left" | "center" | "right" | "justify";
  fontFamily?: "sans" | "display" | "serif" | "mono";
  fontSize?: "sm" | "base" | "lg" | "xl" | "2xl" | "3xl" | "4xl";
  spacing?: "compact" | "comfortable" | "spacious";
  textColorVariant?: "foreground" | "muted-foreground" | "accent" | "accent-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "white" | "black";
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  enableFadeIn?: boolean;
};

export type SectionHeader = {
  _type: "section-header";
  padding?: SectionPadding;
  colorVariant?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
  sectionWidth?: "default" | "narrow";
  stackAlign?: "left" | "center";
  tagLine?: string;
  title?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  enableFadeIn?: boolean;
};

export type HeroFull = {
  _type: "hero-full";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  height?: "screen" | "70vh" | "60vh";
  overlay?: boolean;
  initialHeaderVisible?: boolean;
  frosted?: boolean;
  overlayStrength?: number;
  contentAlignment?: "left" | "center" | "right";
  enableFadeIn?: boolean;
};

export type Hero2 = {
  _type: "hero-2";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  links?: Array<{
    _key: string;
  } & Link>;
  enableFadeIn?: boolean;
};

export type Hero1 = {
  _type: "hero-1";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  links?: Array<{
    _key: string;
  } & Link>;
  enableFadeIn?: boolean;
};

export type CloudinaryGalleryImage = {
  _type: "cloudinary-gallery-image";
  cloudinaryPublicId?: string;
  alt?: string;
  caption?: string;
  overrideUrl?: string;
  widthOverride?: number;
  heightOverride?: number;
  createdAtOverride?: string;
};

export type ProductVariant = {
  _type: "productVariant";
  title?: string;
  sku?: string;
  priceOverride?: number;
  stock?: number;
  options?: Array<{
    name?: string;
    value?: string;
    _type: "option";
    _key: string;
  }>;
};

export type HeroFlex = {
  _type: "hero-flex";
  variant?: "fullBleed" | "split" | "card";
  minHeight?: "auto" | "60vh" | "80vh" | "100vh" | "custom";
  minHeightCustom?: number;
  contentSpacing?: "none" | "micro" | "compact" | "cozy" | "roomy" | "spacious";
  paddingStrategy?: "none" | "micro" | "compact" | "cozy" | "roomy" | "spacious";
  paddingStrategyDesktop?: "none" | "micro" | "compact" | "cozy" | "roomy" | "spacious";
  textAlign?: "left" | "center" | "right";
  mobileOverrides?: {
    textAlign?: "left" | "center" | "right";
    title?: string;
    body?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
  };
  invertText?: boolean;
  mobileStack?: "mediaFirst" | "textFirst";
  mediaPosition?: "left" | "right";
  eyebrow?: string;
  title?: string;
  titleStyles?: {
    font?: "sans" | "serif" | "display" | "mono";
    size?: "xs" | "sm" | "base" | "lg" | "xl" | "2xl" | "3xl" | "4xl" | "5xl" | "6xl";
    weight?: "300" | "400" | "500" | "600" | "700" | "800";
    tracking?: "tighter" | "tight" | "normal" | "wide";
  };
  titleBodySpacing?: "tight" | "snug" | "normal" | "relaxed";
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  ctas?: Array<{
    label?: string;
    href?: string;
    style?: "primary" | "secondary" | "ghost";
    ariaLabel?: string;
    _type: "cta";
    _key: string;
  }>;
  media?: {
    type?: "image" | "carousel" | "lottie";
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    images?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    lottie?: LottieAsset;
    lottieSize?: "small" | "medium" | "large" | "full";
    lottieHeight?: "small" | "medium" | "large" | "full";
    widthMode?: "auto" | "px" | "percent";
    widthValue?: number;
    maxWidth?: number;
    fit?: "contain" | "cover";
    autoAdvanceInterval?: number;
    align?: "start" | "center" | "end";
  };
  background?: {
    mode?: "none" | "color" | "image" | "gradient";
    token?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    color?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    overlayOpacity?: number;
    gradient?: {
      angle?: number;
      from?: string;
      to?: string;
    };
  };
  shape?: {
    enabled?: boolean;
    type?: "rectangle" | "rounded";
    radius?: number;
    padding?: number;
    shadow?: "none" | "soft" | "medium" | "strong";
    fill?: "color" | "image" | "lottie";
    color?: string;
    token?: "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    lottie?: LottieAsset;
  };
  enableFadeIn?: boolean;
};

export type SectionPadding = {
  _type: "section-padding";
  top?: boolean;
  bottom?: boolean;
};

export type ButtonVariant = "default" | "destructive" | "outline" | "secondary" | "ghost" | "link";

export type ColorVariant = "background" | "foreground" | "card" | "card-foreground" | "popover" | "popover-foreground" | "primary" | "primary-foreground" | "secondary" | "secondary-foreground" | "muted" | "muted-foreground" | "accent" | "accent-foreground" | "destructive" | "destructive-foreground" | "white" | "white-foreground" | "black" | "black-foreground" | "light-gray" | "light-gray-foreground" | "cool-gray" | "cool-gray-foreground" | "soft-blue" | "soft-blue-foreground" | "sky-blue" | "sky-blue-foreground" | "mint" | "mint-foreground" | "sand" | "sand-foreground" | "peach" | "peach-foreground" | "slate" | "slate-foreground" | "navy" | "navy-foreground" | "charcoal" | "charcoal-foreground";

export type Link = {
  _type: "link";
  isExternal?: boolean;
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
  anchor?: string;
  title?: string;
  href?: string;
  target?: boolean;
  buttonVariant?: ButtonVariant;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    isExternal?: boolean;
    internalLink?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "post";
    };
    href?: string;
    target?: boolean;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  _type: "image";
  _key: string;
} | {
  videoId?: string;
  _type: "youtube";
  _key: string;
} | {
  _key: string;
} & Code>;

export type Product = {
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  excerpt?: string;
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "collection";
  }>;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  price?: number;
  compareAtPrice?: number;
  body?: BlockContent;
  variants?: Array<{
    _key: string;
  } & ProductVariant>;
  stock?: number;
  meta_title?: string;
  meta_description?: string;
  noindex?: boolean;
  orderRank?: string;
};

export type BookingSettings = {
  _id: string;
  _type: "bookingSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  servicePostcode?: string;
  serviceLocation?: Geopoint;
  serviceRadiusKm?: 5 | 10 | 15 | 20 | 25 | 30;
  serviceAreaLabel?: string;
  successMessage?: string;
  notificationEmail?: string;
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  headerLogo?: {
    dark?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    light?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    width?: number;
    height?: number;
  };
  footerLogo?: {
    dark?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    light?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    width?: number;
    height?: number;
  };
  showSiteNameInHeader?: boolean;
  showSiteNameInFooter?: boolean;
  siteName?: string;
  copyright?: BlockContent;
};

export type Navigation = {
  _id: string;
  _type: "navigation";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  links?: Array<{
    _key: string;
  } & Link>;
};

export type Testimonial = {
  _id: string;
  _type: "testimonial";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  title?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  body?: BlockContent;
  rating?: number;
  orderRank?: string;
};

export type Faq = {
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  body?: BlockContent;
  orderRank?: string;
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  orderRank?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  blocks?: Array<{
    _key: string;
  } & Hero1 | {
    _key: string;
  } & Hero2 | {
    _key: string;
  } & HeroFull | {
    _key: string;
  } & HeroFlex | {
    _key: string;
  } & SectionHeader | {
    _key: string;
  } & RichTextBlock | {
    _key: string;
  } & LottieAnimation | {
    _key: string;
  } & MenuSection | {
    _key: string;
  } & MenuGoogleSection | {
    _key: string;
  } & SplitRow | {
    _key: string;
  } & GridRow | {
    _key: string;
  } & Carousel1 | {
    _key: string;
  } & Carousel2 | {
    _key: string;
  } & ImageGallery | {
    _key: string;
  } & BeforeAfterGallery | {
    _key: string;
  } & CloudinaryGallery | {
    _key: string;
  } & TestimonialsCarousel | {
    _key: string;
  } & TimelineRow | {
    _key: string;
  } & Cta1 | {
    _key: string;
  } & LogoCloud1 | {
    _key: string;
  } & Faqs | {
    _key: string;
  } & FormNewsletter | {
    _key: string;
  } & FormContact | {
    _key: string;
  } & FormBooking | {
    _key: string;
  } & FormBookingCalendar | {
    _key: string;
  } & LocationMap | {
    _key: string;
  } & AllPosts | {
    _key: string;
  } & ProductGrid | {
    _key: string;
  } & ShopBrowser>;
  meta_title?: string;
  meta_description?: string;
  noindex?: boolean;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  orderRank?: string;
};

export type Collection = {
  _id: string;
  _type: "collection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  orderRank?: string;
};

export type LottieAsset = {
  _type: "lottie-asset";
  file?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  autoplay?: boolean;
  loop?: boolean;
  speed?: number;
  ariaLabel?: string;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  excerpt?: string;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  body?: BlockContent;
  meta_title?: string;
  meta_description?: string;
  noindex?: boolean;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  orderRank?: string;
};

export type Code = {
  _type: "code";
  language?: string;
  filename?: string;
  code?: string;
  highlightedLines?: Array<number>;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = TestimonialsCarousel | LottieAnimation | MenuGoogleSection | MenuSection | AllPosts | LocationMap | FormContactMap | FormBookingCalendar | FormBooking | FormContact | FormNewsletter | Faqs | LogoCloud1 | Cta1 | Timelines1 | TimelineRow | BeforeAfterGallery | CloudinaryGallery | ImageGallery | Carousel2 | Carousel1 | ShopBrowser | ProductGrid | GridRow | GridPost | PricingCard | GridCard | SplitLocationMap | SplitContactForm | SplitInfo | SplitInfoList | SplitImage | SplitCard | SplitCardsList | SplitContent | SplitRow | RichTextBlock | SectionHeader | HeroFull | Hero2 | Hero1 | CloudinaryGalleryImage | ProductVariant | HeroFlex | SectionPadding | ButtonVariant | ColorVariant | Link | BlockContent | Product | BookingSettings | Settings | Navigation | Testimonial | Faq | Category | Page | Collection | LottieAsset | Post | Author | Code | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./app/sitemap.ts
// Variable: pagesQuery
// Query: *[_type == 'page'] | order(slug.current) {      'url': $baseUrl + select(slug.current == 'index' => '', '/' + slug.current),      'lastModified': _updatedAt,      'changeFrequency': 'daily',      'priority': select(        slug.current == 'index' => 1,        0.5      )    }
export type PagesQueryResult = Array<{
  url: unknown;
  lastModified: string;
  changeFrequency: "daily";
  priority: 0.5 | 1;
}>;
// Variable: postsQuery
// Query: *[_type == 'post'] | order(_updatedAt desc) {      'url': $baseUrl + '/blog/' + slug.current,      'lastModified': _updatedAt,      'changeFrequency': 'weekly',      'priority': 0.7    }
export type PostsQueryResult = Array<{
  url: unknown;
  lastModified: string;
  changeFrequency: "weekly";
  priority: 0.7;
}>;

// Source: ./sanity/queries/booking-settings.ts
// Variable: BOOKING_SETTINGS_BY_ID_QUERY
// Query: *[_type == "bookingSettings" && _id == $id][0]{      _id,  title,  servicePostcode,  serviceRadiusKm,  serviceLocation,  serviceAreaLabel,  successMessage,  notificationEmail,  }
export type BOOKING_SETTINGS_BY_ID_QUERYResult = {
  _id: string;
  title: string | null;
  servicePostcode: string | null;
  serviceRadiusKm: 10 | 15 | 20 | 25 | 30 | 5 | null;
  serviceLocation: Geopoint | null;
  serviceAreaLabel: string | null;
  successMessage: string | null;
  notificationEmail: string | null;
} | null;
// Variable: BOOKING_SETTINGS_DEFAULT_QUERY
// Query: *[_type == "bookingSettings"][0]{      _id,  title,  servicePostcode,  serviceRadiusKm,  serviceLocation,  serviceAreaLabel,  successMessage,  notificationEmail,  }
export type BOOKING_SETTINGS_DEFAULT_QUERYResult = {
  _id: string;
  title: string | null;
  servicePostcode: string | null;
  serviceRadiusKm: 10 | 15 | 20 | 25 | 30 | 5 | null;
  serviceLocation: Geopoint | null;
  serviceAreaLabel: string | null;
  successMessage: string | null;
  notificationEmail: string | null;
} | null;

// Source: ./sanity/queries/navigation.ts
// Variable: NAVIGATION_QUERY
// Query: *[_type == "navigation"]{    _type,    _key,    links[]{          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  }
export type NAVIGATION_QUERYResult = Array<{
  _type: "navigation";
  _key: null;
  links: Array<{
    _key: string;
    _type: "link";
    isExternal?: boolean;
    internalLink?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "post";
    };
    anchor?: string;
    title?: string;
    href: string | "/" | null;
    target?: boolean;
    buttonVariant?: ButtonVariant;
  }> | null;
}>;

// Source: ./sanity/queries/page.ts
// Variable: PAGE_QUERY
// Query: *[_type == "page" && slug.current == $slug][0]{    blocks[]{        _type == "hero-1" => {    _type,    _key,    tagLine,    title,    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    image{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    enableFadeIn,  },        _type == "hero-2" => {    _type,    _key,    tagLine,    title,    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    enableFadeIn,  },        _type == "hero-full" => {    _type,    _key,    tagLine,    title,    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    images[]{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    image{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    height,    overlay,    frosted,    overlayStrength,    contentAlignment,    initialHeaderVisible,    enableFadeIn,  },        _type == "hero-flex" => {    _type,    _key,    variant,    minHeight,    minHeightCustom,    contentSpacing,    paddingStrategy,    paddingStrategyDesktop,    textAlign,    mobileOverrides {      textAlign,      title,      body[]{          ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }      },    },    invertText,    mobileStack,    mediaPosition,    eyebrow,    title,    titleStyles {      font,      size,      weight,      tracking,    },    titleBodySpacing,    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    ctas[]{      _key,      label,      href,      style,      ariaLabel,    },    media {      type,      widthMode,      widthValue,      maxWidth,      fit,      align,      autoAdvanceInterval,      lottieSize,      lottieHeight,      image {          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }      },      images[]{          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }      },      lottie {        autoplay,        loop,        speed,        ariaLabel,        file {          asset->{            _id,            url          }        }      }    },    background {      mode,      token,      color,      overlayOpacity,      image {          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }      },      gradient {        angle,        from,        to,      }    },    shape {      enabled,      type,      radius,      padding,      shadow,      fill,      color,      token,      image {          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }      },      lottie {        autoplay,        loop,        speed,        ariaLabel,        file {          asset->{            _id,            url          }        }      }    },    enableFadeIn,  },        _type == "section-header" => {    _type,    _key,    padding,    colorVariant,    sectionWidth,    stackAlign,    tagLine,    title,    description[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    link{          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    enableFadeIn,  },        _type == "rich-text-block" => {    _type,    _key,    padding,    colorVariant,    colorVariantDark,    contentWidth,    textAlign,    fontFamily,    fontSize,    spacing,    textColorVariant,    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    enableFadeIn,  },        _type == "lottie-animation" => {    _type,    _key,    padding,    colorVariant,    colorVariantDark,    sectionWidth,    animationAlign,    verticalSpacing,    animationSize,    title[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    textOrientation,    textPlacement,    textSpacing,    ariaLabel,    animation{      asset->{        _id,        url,        mimeType,        size,        originalFilename      }    },    animationDark{      asset->{        _id,        url,        mimeType,        size,        originalFilename      }    },    enableFadeIn,  },        _type == "split-row" => {    _type,    _key,    padding,    colorVariant,    colorVariantDark,    sectionId,    noGap,    splitColumns[]{        _type == "split-content" => {    _type,    _key,    sticky,    padding,    colorVariant,    tagLine,    title,    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    link{          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },  },        _type == "split-cards-list" => {    _type,    _key,    list[]{      _key,      image{          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }      },      imageSize,      imageShape,      sizeBasis,      tagLine,      title,      body[]{          ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }      },    },  },        _type == "split-image" => {    _type,    _key,    image{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    imageLight{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    imageDark{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    imageSize,    imageShape,    aspectRatio,  },        _type == "split-info-list" => {    _type,    _key,    list[]{      image{          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }      },      title,      body[]{          ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }      },      tags[],    },  },        _type == "rich-text-block" => {    _type,    _key,    padding,    colorVariant,    colorVariantDark,    contentWidth,    textAlign,    fontFamily,    fontSize,    spacing,    textColorVariant,    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    enableFadeIn,  },        _type == "split-contact-form" => {    _type,    _key,    heading,    body,    formspreeFormId,    submitButtonLabel,    successMessage,  },        _type == "split-location-map" => {    _type,    _key,    heading,    headingAlignment,    locationLabel,    locationName,    address,    latitude,    longitude,    mapZoom,  },    },    enableFadeIn,  },        _type == "grid-row" => {    _type,    _key,    padding,    colorVariant,    gridColumns,    columns[]{        _type == "grid-card" => {    _type,    _key,    title,    excerpt,    image{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    link{          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },  },        _type == "pricing-card" => {    _type,    _key,    title,    tagLine,    price,    list[],    excerpt,    link{          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },  },        _type == "grid-post" => {    _type,    _key,    post->{      title,      slug,      excerpt,      image{          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }      },      categories[]->{        _id,        title,      },    },  },        _type == "rich-text-block" => {    _type,    _key,    padding,    colorVariant,    colorVariantDark,    contentWidth,    textAlign,    fontFamily,    fontSize,    spacing,    textColorVariant,    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    enableFadeIn,  },    },    enableFadeIn,  },        _type == "carousel-1" => {    _type,    _key,    padding,    colorVariant,    size,    orientation,    indicators,    images[]{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    enableFadeIn,  },        _type == "carousel-2" => {    _type,    _key,    padding,    colorVariant,    testimonial[]->{      _id,      name,      title,      image{          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }      },      body[]{          ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }      },      rating,    },    enableFadeIn,  },        _type == "image-gallery" => {    _type,    _key,    padding,    colorVariant,    heading,    intro,    desktopColumns,    dateOrder,    images[]{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  },      alt,      caption,    },    enableFadeIn,  },        _type == "before-after-gallery" => {    _type,    _key,    padding,    colorVariant,    heading,    intro,    items[]{      _key,      title,      description,      beforeLabel,      afterLabel,      beforeImage{          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  },        alt,      },      afterImage{          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  },        alt,      },    },    enableFadeIn,  },        _type == "cloudinary-gallery" => {    _type,    _key,    padding,    colorVariant,    heading,    intro,    folderPrefix,    dateOrder,    images[]{      _key,      cloudinaryPublicId,      alt,      caption,      overrideUrl,      widthOverride,      heightOverride,      createdAtOverride,    },    enableFadeIn,  },        _type == "testimonials-carousel" => {    _type,    _key,    padding,    colorVariant,    sectionId,    eyebrow,    heading,    intro,    testimonials[]->{      _id,      name,      title,      rating,      image{          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }      },      body[]{          ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }      },    },    cta {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    enableFadeIn,  },        _type == "timeline-row" => {    _type,    _key,    padding,    colorVariant,    timelines[]{      title,      tagLine,      body[]{          ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }      },    },    enableFadeIn,  },        _type == "cta-1" => {    _type,    _key,    padding,    colorVariant,    sectionWidth,    stackAlign,    tagLine,    title,    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    enableFadeIn,  },        _type == "logo-cloud-1" => {    _type,    _key,    padding,    colorVariant,    title,    images[]{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    enableFadeIn,  },        _type == "faqs" => {    _type,    _key,    padding,    colorVariant,    faqs[]->{      _id,      title,      body[]{          ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }      },    },    enableFadeIn,  },        _type == "form-newsletter" => {    _type,    _key,    padding,    colorVariant,    stackAlign,    consentText,    buttonText,    successMessage,    enableFadeIn,  },        _type == "form-contact" => {    _type,    _key,    padding,    colorVariant,    heading,    body,    formspreeFormId,    submitButtonLabel,    successMessage,    enableFadeIn,  },        _type == "form-booking" => {    _type,    _key,    padding,    colorVariant,    heading,    body,    services,    availabilityNote,    submitButtonLabel,    successMessage,    outOfAreaMessage,    "settings": bookingSettings[0]->{      _id,      title,      servicePostcode,      serviceRadiusKm,      serviceLocation,      serviceAreaLabel,      successMessage,      notificationEmail,    },    enableFadeIn,  },        _type == "form-booking-calendar" => {    _type,    _key,    padding,    colorVariant,    heading,    body,    calendarIntro,    services,    noticePeriodDays,    advanceWindowDays,    availabilityNote,    submitButtonLabel,    successMessage,    outOfAreaMessage,    "settings": bookingSettings[0]->{      _id,      title,      servicePostcode,      serviceRadiusKm,      serviceLocation,      serviceAreaLabel,      successMessage,      notificationEmail,    },    enableFadeIn,  },        _type == "form-contact-map" => {    _type,    _key,    padding,    colorVariant,    heading,    body,    formspreeFormId,    submitButtonLabel,    successMessage,    locationName,    address,    latitude,    longitude,    mapZoom,    enableFadeIn,  },        _type == "location-map" => {    _type,    _key,    padding,    colorVariant,    heading,    headingAlignment,    locationLabel,    locationName,    address,    latitude,    longitude,    mapZoom,    enableFadeIn,  },        _type == "all-posts" => {    _type,    _key,    padding,    colorVariant,    enableFadeIn,  },        _type == "menu-section" => {    _type,    _key,    padding,    background{      style,      colorVariant,      texturePreset,      textureTint,      customImage{          ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  },        alt,        opacity      }    },    eyebrow,    title,    sectionId,    intro,    headingFont,    displayMode,    menuImages[]{      _key,        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  },      alt,      focus    },    imagePlacement,    imageLayout,    categories[]{      title,      description,      items[]{        _key,        name,        description,        price,        dietary,        itemImage{            ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  },          alt        }      }    },    lottieAnimation{      asset->{        _id,        url,        mimeType,        size,        originalFilename      }    },    lottiePlacement,    enableFadeIn,  },        _type == "menu-google-section" => {    _type,    _key,    padding,    sectionId,    eyebrow,    title,    intro,    accordionBehaviour,    headingAlignment,    appearance{      backgroundColor,      backgroundColorDark,      panelColor,      panelColorDark,      accentColor,      accentColorDark,      headingColor,      headingColorDark,      tabColor,      tabColorDark,      categoryColor,      categoryColorDark,      borderColor,      borderColorDark    },    categories[]{      _key,      title,      tagline,      itemEntryMode,      items[]{        _key,        name,        price,        description,        dietary      },      rawItems    },    enableFadeIn,  },        _type == "product-grid" => {    _type,    _key,    heading,    description,    padding,    colorVariant,    selection {      mode,      products[]{        _key,        _ref,        _type      },      collection-> {        _id,        title,        slug      }    },    displayOptions {      columns,      showComparePrice,      showQuickView,      cardLayout    }  },        _type == "shop-browser" => {    _type,    _key,    hero {      enabled,      eyebrow,      heading,      subheading    },    overview {      label,      summaryTemplate    },    toolbar {      sortLabel,      sortOptions[]{        _key,        label,        value      },      views {        gridLabel,        listLabel      }    },    emptyState {      heading,      body    },    selection {      mode,      products[]{        _key,        _ref,        _type      },      collection    },    categoryFilters[]{      _key,      _ref,      _type    },    grid {      columns,      showComparePrice,      showQuickView,      cardLayout    },    padding,    colorVariant  },    },    meta_title,    meta_description,    noindex,    ogImage {      asset->{        _id,        url,        metadata {          dimensions {            width,            height          }        }      },    }  }
export type PAGE_QUERYResult = {
  blocks: Array<{
    _type: "all-posts";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "before-after-gallery";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    heading: string | null;
    intro: string | null;
    items: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      beforeLabel: string | null;
      afterLabel: string | null;
      beforeImage: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string | null;
        _type: "image";
      } | null;
      afterImage: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string | null;
        _type: "image";
      } | null;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "carousel-1";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    size: "one" | "three" | "two" | null;
    orientation: null;
    indicators: "count" | "dots" | "none" | null;
    images: Array<{
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "carousel-2";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    testimonial: Array<{
      _id: string;
      name: string | null;
      title: string | null;
      image: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
      rating: number | null;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "cloudinary-gallery";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    heading: string | null;
    intro: string | null;
    folderPrefix: string | null;
    dateOrder: "asc" | "desc" | null;
    images: Array<{
      _key: string;
      cloudinaryPublicId: string | null;
      alt: string | null;
      caption: string | null;
      overrideUrl: string | null;
      widthOverride: number | null;
      heightOverride: number | null;
      createdAtOverride: string | null;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "cta-1";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    sectionWidth: "default" | "narrow" | null;
    stackAlign: "center" | "left" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    links: Array<{
      _key: string;
      _type: "link";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      anchor?: string;
      title?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "faqs";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    faqs: Array<{
      _id: string;
      title: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "form-booking-calendar";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    heading: string | null;
    body: string | null;
    calendarIntro: string | null;
    services: Array<string> | null;
    noticePeriodDays: number | null;
    advanceWindowDays: number | null;
    availabilityNote: string | null;
    submitButtonLabel: string | null;
    successMessage: string | null;
    outOfAreaMessage: string | null;
    settings: {
      _id: string;
      title: string | null;
      servicePostcode: string | null;
      serviceRadiusKm: 10 | 15 | 20 | 25 | 30 | 5 | null;
      serviceLocation: Geopoint | null;
      serviceAreaLabel: string | null;
      successMessage: string | null;
      notificationEmail: string | null;
    } | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "form-booking";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    heading: string | null;
    body: string | null;
    services: Array<string> | null;
    availabilityNote: string | null;
    submitButtonLabel: string | null;
    successMessage: string | null;
    outOfAreaMessage: string | null;
    settings: {
      _id: string;
      title: string | null;
      servicePostcode: string | null;
      serviceRadiusKm: 10 | 15 | 20 | 25 | 30 | 5 | null;
      serviceLocation: Geopoint | null;
      serviceAreaLabel: string | null;
      successMessage: string | null;
      notificationEmail: string | null;
    } | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "form-contact";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    heading: string | null;
    body: string | null;
    formspreeFormId: string | null;
    submitButtonLabel: string | null;
    successMessage: string | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "form-newsletter";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    stackAlign: "center" | "left" | null;
    consentText: string | null;
    buttonText: string | null;
    successMessage: string | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "grid-row";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    gridColumns: "grid-cols-2" | "grid-cols-3" | "grid-cols-4" | null;
    columns: Array<{
      _type: "grid-card";
      _key: string;
      title: string | null;
      excerpt: string | null;
      image: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      } | null;
      link: {
        _key: null;
        _type: "link";
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        anchor?: string;
        title?: string;
        href: string | "/" | null;
        target?: boolean;
        buttonVariant?: ButtonVariant;
      } | null;
    } | {
      _type: "grid-post";
      _key: string;
      post: {
        title: string | null;
        slug: Slug | null;
        excerpt: string | null;
        image: {
          asset: {
            _id: string;
            _createdAt: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        } | null;
        categories: Array<{
          _id: string;
          title: string | null;
        }> | null;
      } | null;
    } | {
      _type: "pricing-card";
      _key: string;
      title: string | null;
      tagLine: string | null;
      price: {
        value?: number;
        period?: string;
      } | null;
      list: Array<string> | null;
      excerpt: string | null;
      link: {
        _key: null;
        _type: "link";
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        anchor?: string;
        title?: string;
        href: string | "/" | null;
        target?: boolean;
        buttonVariant?: ButtonVariant;
      } | null;
    } | {
      _type: "rich-text-block";
      _key: string;
      padding: SectionPadding | null;
      colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      colorVariantDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      contentWidth: "default" | "full" | "narrow" | "wide" | null;
      textAlign: "center" | "justify" | "left" | "right" | null;
      fontFamily: "display" | "mono" | "sans" | "serif" | null;
      fontSize: "2xl" | "3xl" | "4xl" | "base" | "lg" | "sm" | "xl" | null;
      spacing: "comfortable" | "compact" | "spacious" | null;
      textColorVariant: "accent-foreground" | "accent" | "black" | "foreground" | "muted-foreground" | "primary-foreground" | "primary" | "secondary-foreground" | "secondary" | "white" | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
      enableFadeIn: boolean | null;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "hero-1";
    _key: string;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    image: {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    } | null;
    links: Array<{
      _key: string;
      _type: "link";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      anchor?: string;
      title?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "hero-2";
    _key: string;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    links: Array<{
      _key: string;
      _type: "link";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      anchor?: string;
      title?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "hero-flex";
    _key: string;
    variant: "card" | "fullBleed" | "split" | null;
    minHeight: "100vh" | "60vh" | "80vh" | "auto" | "custom" | null;
    minHeightCustom: number | null;
    contentSpacing: "compact" | "cozy" | "micro" | "none" | "roomy" | "spacious" | null;
    paddingStrategy: "compact" | "cozy" | "micro" | "none" | "roomy" | "spacious" | null;
    paddingStrategyDesktop: "compact" | "cozy" | "micro" | "none" | "roomy" | "spacious" | null;
    textAlign: "center" | "left" | "right" | null;
    mobileOverrides: {
      textAlign: "center" | "left" | "right" | null;
      title: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          href: string | null;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    } | null;
    invertText: boolean | null;
    mobileStack: "mediaFirst" | "textFirst" | null;
    mediaPosition: "left" | "right" | null;
    eyebrow: string | null;
    title: string | null;
    titleStyles: {
      font: "display" | "mono" | "sans" | "serif" | null;
      size: "2xl" | "3xl" | "4xl" | "5xl" | "6xl" | "base" | "lg" | "sm" | "xl" | "xs" | null;
      weight: "300" | "400" | "500" | "600" | "700" | "800" | null;
      tracking: "normal" | "tight" | "tighter" | "wide" | null;
    } | null;
    titleBodySpacing: "normal" | "relaxed" | "snug" | "tight" | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    ctas: Array<{
      _key: string;
      label: string | null;
      href: string | null;
      style: "ghost" | "primary" | "secondary" | null;
      ariaLabel: string | null;
    }> | null;
    media: {
      type: "carousel" | "image" | "lottie" | null;
      widthMode: "auto" | "percent" | "px" | null;
      widthValue: number | null;
      maxWidth: number | null;
      fit: "contain" | "cover" | null;
      align: "center" | "end" | "start" | null;
      autoAdvanceInterval: number | null;
      lottieSize: "full" | "large" | "medium" | "small" | null;
      lottieHeight: "full" | "large" | "medium" | "small" | null;
      image: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      } | null;
      images: Array<{
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }> | null;
      lottie: {
        autoplay: boolean | null;
        loop: boolean | null;
        speed: number | null;
        ariaLabel: string | null;
        file: {
          asset: {
            _id: string;
            url: string | null;
          } | null;
        } | null;
      } | null;
    } | null;
    background: {
      mode: "color" | "gradient" | "image" | "none" | null;
      token: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      color: string | null;
      overlayOpacity: number | null;
      image: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      } | null;
      gradient: {
        angle: number | null;
        from: string | null;
        to: string | null;
      } | null;
    } | null;
    shape: {
      enabled: boolean | null;
      type: "rectangle" | "rounded" | null;
      radius: number | null;
      padding: number | null;
      shadow: "medium" | "none" | "soft" | "strong" | null;
      fill: "color" | "image" | "lottie" | null;
      color: string | null;
      token: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      image: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      } | null;
      lottie: {
        autoplay: boolean | null;
        loop: boolean | null;
        speed: number | null;
        ariaLabel: string | null;
        file: {
          asset: {
            _id: string;
            url: string | null;
          } | null;
        } | null;
      } | null;
    } | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "hero-full";
    _key: string;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    images: Array<{
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }> | null;
    image: {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    } | null;
    height: "60vh" | "70vh" | "screen" | null;
    overlay: boolean | null;
    frosted: boolean | null;
    overlayStrength: number | null;
    contentAlignment: "center" | "left" | "right" | null;
    initialHeaderVisible: boolean | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "image-gallery";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    heading: string | null;
    intro: string | null;
    desktopColumns: "three" | "two" | null;
    dateOrder: "asc" | "desc" | null;
    images: Array<{
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      caption: string | null;
      _type: "image";
      _key: string;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "location-map";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    heading: string | null;
    headingAlignment: "center" | "left" | "right" | null;
    locationLabel: string | null;
    locationName: string | null;
    address: string | null;
    latitude: number | null;
    longitude: number | null;
    mapZoom: number | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "logo-cloud-1";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    title: string | null;
    images: Array<{
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "lottie-animation";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    colorVariantDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    sectionWidth: "default" | "narrow" | null;
    animationAlign: "center" | "left" | "right" | null;
    verticalSpacing: "comfortable" | "compact" | "none" | "roomy" | "tight" | null;
    animationSize: "full" | "large" | "medium" | "small" | null;
    title: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    textOrientation: "horizontal" | "vertical" | null;
    textPlacement: "after" | "before" | null;
    textSpacing: "comfortable" | "compact" | "none" | "roomy" | "tight" | null;
    ariaLabel: string | null;
    animation: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        size: number | null;
        originalFilename: string | null;
      } | null;
    } | null;
    animationDark: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        size: number | null;
        originalFilename: string | null;
      } | null;
    } | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "menu-google-section";
    _key: string;
    padding: SectionPadding | null;
    sectionId: string | null;
    eyebrow: string | null;
    title: string | null;
    intro: string | null;
    accordionBehaviour: "expanded" | "first-open" | null;
    headingAlignment: "center" | "left" | null;
    appearance: {
      backgroundColor: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      backgroundColorDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      panelColor: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      panelColorDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      accentColor: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      accentColorDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      headingColor: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      headingColorDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      tabColor: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      tabColorDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      categoryColor: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      categoryColorDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      borderColor: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      borderColorDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    } | null;
    categories: Array<{
      _key: string;
      title: string | null;
      tagline: string | null;
      itemEntryMode: "structured" | "text" | null;
      items: Array<{
        _key: string;
        name: string | null;
        price: string | null;
        description: string | null;
        dietary: Array<string> | null;
      }> | null;
      rawItems: string | null;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "menu-section";
    _key: string;
    padding: SectionPadding | null;
    background: {
      style: "color" | "image" | "texture" | null;
      colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      texturePreset: "canvas" | "linen" | "paper" | null;
      textureTint: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      customImage: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string | null;
        opacity: number | null;
        _type: "image";
      } | null;
    } | null;
    eyebrow: string | null;
    title: string | null;
    sectionId: string | null;
    intro: string | null;
    headingFont: "sans" | "serif" | null;
    displayMode: "combined" | "image" | "structured" | null;
    menuImages: Array<{
      _key: string;
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      focus: string | null;
      _type: "menuImage";
    }> | null;
    imagePlacement: "left" | "right" | "split" | null;
    imageLayout: "inline" | "stacked" | null;
    categories: Array<{
      title: string | null;
      description: string | null;
      items: Array<{
        _key: string;
        name: string | null;
        description: string | null;
        price: string | null;
        dietary: string | null;
        itemImage: {
          asset: {
            _id: string;
            _createdAt: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt: string | null;
          _type: "image";
        } | null;
      }> | null;
    }> | null;
    lottieAnimation: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        size: number | null;
        originalFilename: string | null;
      } | null;
    } | null;
    lottiePlacement: "aside" | "heading" | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "product-grid";
    _key: string;
    heading: string | null;
    description: string | null;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    selection: {
      mode: "collection" | "manual" | null;
      products: Array<{
        _key: string;
        _ref: string;
        _type: "reference";
      }> | null;
      collection: {
        _id: string;
        title: string | null;
        slug: Slug | null;
      } | null;
    } | null;
    displayOptions: {
      columns: 2 | 3 | 4 | null;
      showComparePrice: boolean | null;
      showQuickView: boolean | null;
      cardLayout: "card" | "stacked" | null;
    } | null;
  } | {
    _type: "rich-text-block";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    colorVariantDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    contentWidth: "default" | "full" | "narrow" | "wide" | null;
    textAlign: "center" | "justify" | "left" | "right" | null;
    fontFamily: "display" | "mono" | "sans" | "serif" | null;
    fontSize: "2xl" | "3xl" | "4xl" | "base" | "lg" | "sm" | "xl" | null;
    spacing: "comfortable" | "compact" | "spacious" | null;
    textColorVariant: "accent-foreground" | "accent" | "black" | "foreground" | "muted-foreground" | "primary-foreground" | "primary" | "secondary-foreground" | "secondary" | "white" | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "section-header";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    sectionWidth: "default" | "narrow" | null;
    stackAlign: "center" | "left" | null;
    tagLine: string | null;
    title: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    link: null;
    enableFadeIn: boolean | null;
  } | {
    _type: "shop-browser";
    _key: string;
    hero: {
      enabled: boolean | null;
      eyebrow: string | null;
      heading: string | null;
      subheading: string | null;
    } | null;
    overview: {
      label: string | null;
      summaryTemplate: string | null;
    } | null;
    toolbar: {
      sortLabel: string | null;
      sortOptions: Array<{
        _key: string;
        label: string | null;
        value: "featured" | "price-asc" | "price-desc" | "title-asc" | null;
      }> | null;
      views: {
        gridLabel: string | null;
        listLabel: string | null;
      } | null;
    } | null;
    emptyState: {
      heading: string | null;
      body: string | null;
    } | null;
    selection: {
      mode: "all" | "collection" | "manual" | null;
      products: Array<{
        _key: string;
        _ref: string;
        _type: "reference";
      }> | null;
      collection: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "collection";
      } | null;
    } | null;
    categoryFilters: Array<{
      _key: string;
      _ref: string;
      _type: "reference";
    }> | null;
    grid: {
      columns: 2 | 3 | 4 | null;
      showComparePrice: boolean | null;
      showQuickView: boolean | null;
      cardLayout: "card" | "stacked" | null;
    } | null;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
  } | {
    _type: "split-row";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    colorVariantDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    sectionId: string | null;
    noGap: boolean | null;
    splitColumns: Array<{
      _type: "rich-text-block";
      _key: string;
      padding: SectionPadding | null;
      colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      colorVariantDark: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      contentWidth: "default" | "full" | "narrow" | "wide" | null;
      textAlign: "center" | "justify" | "left" | "right" | null;
      fontFamily: "display" | "mono" | "sans" | "serif" | null;
      fontSize: "2xl" | "3xl" | "4xl" | "base" | "lg" | "sm" | "xl" | null;
      spacing: "comfortable" | "compact" | "spacious" | null;
      textColorVariant: "accent-foreground" | "accent" | "black" | "foreground" | "muted-foreground" | "primary-foreground" | "primary" | "secondary-foreground" | "secondary" | "white" | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
      enableFadeIn: boolean | null;
    } | {
      _type: "split-cards-list";
      _key: string;
      list: Array<{
        _key: string;
        image: {
          asset: {
            _id: string;
            _createdAt: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        } | null;
        imageSize: "lg" | "md" | "sm" | null;
        imageShape: "circle" | "rounded" | "square" | null;
        sizeBasis: "image" | "text" | null;
        tagLine: string | null;
        title: string | null;
        body: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            isExternal?: boolean;
            internalLink?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "page";
            } | {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "post";
            };
            href: string | "/" | null;
            target?: boolean;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          _key: string;
          _type: "code";
          language?: string;
          filename?: string;
          code?: string;
          highlightedLines?: Array<number>;
          markDefs: null;
        } | {
          asset: {
            _id: string;
            _createdAt: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
          markDefs: null;
        } | {
          videoId?: string;
          _type: "youtube";
          _key: string;
          markDefs: null;
        }> | null;
      }> | null;
    } | {
      _type: "split-contact-form";
      _key: string;
      heading: string | null;
      body: string | null;
      formspreeFormId: string | null;
      submitButtonLabel: string | null;
      successMessage: string | null;
    } | {
      _type: "split-content";
      _key: string;
      sticky: boolean | null;
      padding: SectionPadding | null;
      colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
      tagLine: string | null;
      title: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
      link: {
        _key: null;
        _type: "link";
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        anchor?: string;
        title?: string;
        href: string | "/" | null;
        target?: boolean;
        buttonVariant?: ButtonVariant;
      } | null;
    } | {
      _type: "split-image";
      _key: string;
      image: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      } | null;
      imageLight: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      } | null;
      imageDark: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      } | null;
      imageSize: "lg" | "md" | "sm" | "xl" | null;
      imageShape: "circle" | "rounded" | "square" | null;
      aspectRatio: "auto" | "landscape" | "portrait" | "square" | null;
    } | {
      _type: "split-info-list";
      _key: string;
      list: Array<{
        image: {
          asset: {
            _id: string;
            _createdAt: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        } | null;
        title: string | null;
        body: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            isExternal?: boolean;
            internalLink?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "page";
            } | {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "post";
            };
            href: string | "/" | null;
            target?: boolean;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          _key: string;
          _type: "code";
          language?: string;
          filename?: string;
          code?: string;
          highlightedLines?: Array<number>;
          markDefs: null;
        } | {
          asset: {
            _id: string;
            _createdAt: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
          markDefs: null;
        } | {
          videoId?: string;
          _type: "youtube";
          _key: string;
          markDefs: null;
        }> | null;
        tags: Array<string> | null;
      }> | null;
    } | {
      _type: "split-location-map";
      _key: string;
      heading: string | null;
      headingAlignment: "center" | "left" | "right" | null;
      locationLabel: string | null;
      locationName: string | null;
      address: string | null;
      latitude: number | null;
      longitude: number | null;
      mapZoom: number | null;
    }> | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "testimonials-carousel";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    sectionId: string | null;
    eyebrow: string | null;
    heading: string | null;
    intro: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      title: string | null;
      rating: number | null;
      image: {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
    }> | null;
    cta: {
      _key: null;
      _type: "link";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      anchor?: string;
      title?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    } | null;
    enableFadeIn: boolean | null;
  } | {
    _type: "timeline-row";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent-foreground" | "accent" | "background" | "black-foreground" | "black" | "card-foreground" | "card" | "charcoal-foreground" | "charcoal" | "cool-gray-foreground" | "cool-gray" | "destructive-foreground" | "destructive" | "foreground" | "light-gray-foreground" | "light-gray" | "mint-foreground" | "mint" | "muted-foreground" | "muted" | "navy-foreground" | "navy" | "peach-foreground" | "peach" | "popover-foreground" | "popover" | "primary-foreground" | "primary" | "sand-foreground" | "sand" | "secondary-foreground" | "secondary" | "sky-blue-foreground" | "sky-blue" | "slate-foreground" | "slate" | "soft-blue-foreground" | "soft-blue" | "white-foreground" | "white" | null;
    timelines: Array<{
      title: string | null;
      tagLine: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          _createdAt: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
    }> | null;
    enableFadeIn: boolean | null;
  }> | null;
  meta_title: string | null;
  meta_description: string | null;
  noindex: boolean | null;
  ogImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: PAGES_SLUGS_QUERY
// Query: *[_type == "page" && defined(slug)]{slug}
export type PAGES_SLUGS_QUERYResult = Array<{
  slug: Slug | null;
}>;

// Source: ./sanity/queries/post.ts
// Variable: POST_QUERY
// Query: *[_type == "post" && slug.current == $slug][0]{    title,    slug,    image{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    author->{      name,      image {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      }    },    _createdAt,    _updatedAt,    meta_title,    meta_description,    noindex,    ogImage {      asset->{        _id,        url,        metadata {          dimensions {            width,            height          }        }      },    }}
export type POST_QUERYResult = {
  title: string | null;
  slug: Slug | null;
  image: {
    asset: {
      _id: string;
      _createdAt: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
  body: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href: string | "/" | null;
      target?: boolean;
      _type: "link";
      _key: string;
    }> | null;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
    _type: "code";
    language?: string;
    filename?: string;
    code?: string;
    highlightedLines?: Array<number>;
    markDefs: null;
  } | {
    asset: {
      _id: string;
      _createdAt: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
    markDefs: null;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
    markDefs: null;
  }> | null;
  author: {
    name: string | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
    } | null;
  } | null;
  _createdAt: string;
  _updatedAt: string;
  meta_title: string | null;
  meta_description: string | null;
  noindex: boolean | null;
  ogImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: POSTS_QUERY
// Query: *[_type == "post" && defined(slug)] | order(_createdAt desc){    title,    slug,    excerpt,    image{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    _createdAt,}
export type POSTS_QUERYResult = Array<{
  title: string | null;
  slug: Slug | null;
  excerpt: string | null;
  image: {
    asset: {
      _id: string;
      _createdAt: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
  _createdAt: string;
}>;
// Variable: POSTS_SLUGS_QUERY
// Query: *[_type == "post" && defined(slug)]{slug}
export type POSTS_SLUGS_QUERYResult = Array<{
  slug: Slug | null;
}>;

// Source: ./sanity/queries/product/all-products.ts
// Variable: PRODUCTS_QUERY
// Query: *[_type == "product" && defined(slug.current)] | order(orderRank asc) {      _id,  title,  slug,  price,  compareAtPrice,  excerpt,  images[]{      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }  }
export type PRODUCTS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  price: number | null;
  compareAtPrice: number | null;
  excerpt: string | null;
  images: Array<{
    asset: {
      _id: string;
      _createdAt: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
}>;
// Variable: PRODUCTS_BY_IDS_QUERY
// Query: *[_type == "product" && _id in $ids] | order(orderRank asc) {      _id,  title,  slug,  price,  compareAtPrice,  excerpt,  images[]{      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }  }
export type PRODUCTS_BY_IDS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  price: number | null;
  compareAtPrice: number | null;
  excerpt: string | null;
  images: Array<{
    asset: {
      _id: string;
      _createdAt: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
}>;
// Variable: COLLECTION_PRODUCTS_QUERY
// Query: {    "products": *[_type == "product" && references($collectionId)] | order(orderRank asc) {        _id,  title,  slug,  price,  compareAtPrice,  excerpt,  images[]{      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    }  }
export type COLLECTION_PRODUCTS_QUERYResult = {
  products: Array<{
    _id: string;
    title: string | null;
    slug: Slug | null;
    price: number | null;
    compareAtPrice: number | null;
    excerpt: string | null;
    images: Array<{
      asset: {
        _id: string;
        _createdAt: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }> | null;
  }>;
};
// Variable: COLLECTIONS_QUERY
// Query: *[_type == "collection"] | order(orderRank asc) {    _id,    title,    slug,    "productIds": *[_type == "product" && references(^._id)]._id  }
export type COLLECTIONS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  productIds: Array<string>;
}>;
// Variable: COLLECTIONS_BY_IDS_QUERY
// Query: *[_type == "collection" && _id in $ids] | order(orderRank asc) {    _id,    title,    slug,    "productIds": *[_type == "product" && references(^._id)]._id  }
export type COLLECTIONS_BY_IDS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  productIds: Array<string>;
}>;

// Source: ./sanity/queries/product/product-by-slug.ts
// Variable: PRODUCT_QUERY
// Query: *[_type == "product" && slug.current == $slug][0]{    _id,    title,    slug,    excerpt,    price,    compareAtPrice,    stock,    images[]{        ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }    },    body[]{        ...,  markDefs[]{    ...,    _type == "link" => {          _key,    ...,    "href": select(      isExternal => href,      defined(anchor) && !defined(internalLink) => "#" + anchor,      defined(href) && !defined(internalLink) => href,      defined(anchor) && @.internalLink->slug.current == "index" => "/#" + anchor,      defined(anchor) && @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current + "#" + anchor,      defined(anchor) && defined(@.internalLink->slug.current) => "/" + @.internalLink->slug.current + "#" + anchor,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  _type == "image" => {      ...,  asset->{    _id,    _createdAt,    url,    mimeType,    metadata {      lqip,      dimensions {        width,        height      }    }  }  }    },    variants[]{      title,      sku,      priceOverride,      stock,      options[]{        name,        value      }    },    meta_title,    meta_description,    noindex  }
export type PRODUCT_QUERYResult = {
  _id: string;
  title: string | null;
  slug: Slug | null;
  excerpt: string | null;
  price: number | null;
  compareAtPrice: number | null;
  stock: number | null;
  images: Array<{
    asset: {
      _id: string;
      _createdAt: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  body: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href: string | "/" | null;
      target?: boolean;
      _type: "link";
      _key: string;
    }> | null;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
    _type: "code";
    language?: string;
    filename?: string;
    code?: string;
    highlightedLines?: Array<number>;
    markDefs: null;
  } | {
    asset: {
      _id: string;
      _createdAt: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
    markDefs: null;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
    markDefs: null;
  }> | null;
  variants: Array<{
    title: string | null;
    sku: string | null;
    priceOverride: number | null;
    stock: number | null;
    options: Array<{
      name: string | null;
      value: string | null;
    }> | null;
  }> | null;
  meta_title: string | null;
  meta_description: string | null;
  noindex: boolean | null;
} | null;
// Variable: PRODUCTS_SLUGS_QUERY
// Query: *[_type == "product" && defined(slug.current)]{ slug }
export type PRODUCTS_SLUGS_QUERYResult = Array<{
  slug: Slug | null;
}>;

// Source: ./sanity/queries/settings.ts
// Variable: SETTINGS_QUERY
// Query: *[_type == "settings"][0]{  _type,  siteName,  headerLogo{  dark{    ...,    asset->{      _id,      url,      mimeType,      metadata {        lqip,        dimensions {          width,          height        }      }    }  },  light{    ...,    asset->{      _id,      url,      mimeType,      metadata {        lqip,        dimensions {          width,          height        }      }    }  },  width,  height,},  footerLogo{  dark{    ...,    asset->{      _id,      url,      mimeType,      metadata {        lqip,        dimensions {          width,          height        }      }    }  },  light{    ...,    asset->{      _id,      url,      mimeType,      metadata {        lqip,        dimensions {          width,          height        }      }    }  },  width,  height,},  showSiteNameInHeader,  showSiteNameInFooter,  copyright}
export type SETTINGS_QUERYResult = {
  _type: "settings";
  siteName: string | null;
  headerLogo: {
    dark: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
    light: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
    width: number | null;
    height: number | null;
  } | null;
  footerLogo: {
    dark: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
    light: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
    width: number | null;
    height: number | null;
  } | null;
  showSiteNameInHeader: boolean | null;
  showSiteNameInFooter: boolean | null;
  copyright: BlockContent | null;
} | null;

// Source: ./sanity/queries/shop.ts
// Variable: SHOP_PRESENCE_QUERY
// Query: {    "hasShop": count(*[_type == "page" && count(blocks[_type == "shop-browser"]) > 0]) > 0  }
export type SHOP_PRESENCE_QUERYResult = {
  hasShop: boolean;
};

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n    *[_type == 'page'] | order(slug.current) {\n      'url': $baseUrl + select(slug.current == 'index' => '', '/' + slug.current),\n      'lastModified': _updatedAt,\n      'changeFrequency': 'daily',\n      'priority': select(\n        slug.current == 'index' => 1,\n        0.5\n      )\n    }\n  ": PagesQueryResult;
    "\n    *[_type == 'post'] | order(_updatedAt desc) {\n      'url': $baseUrl + '/blog/' + slug.current,\n      'lastModified': _updatedAt,\n      'changeFrequency': 'weekly',\n      'priority': 0.7\n    }\n  ": PostsQueryResult;
    "\n  *[_type == \"bookingSettings\" && _id == $id][0]{\n    \n  _id,\n  title,\n  servicePostcode,\n  serviceRadiusKm,\n  serviceLocation,\n  serviceAreaLabel,\n  successMessage,\n  notificationEmail,\n\n  }\n": BOOKING_SETTINGS_BY_ID_QUERYResult;
    "\n  *[_type == \"bookingSettings\"][0]{\n    \n  _id,\n  title,\n  servicePostcode,\n  serviceRadiusKm,\n  serviceLocation,\n  serviceAreaLabel,\n  successMessage,\n  notificationEmail,\n\n  }\n": BOOKING_SETTINGS_DEFAULT_QUERYResult;
    "\n  *[_type == \"navigation\"]{\n    _type,\n    _key,\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  }\n": NAVIGATION_QUERYResult;
    "\n  *[_type == \"page\" && slug.current == $slug][0]{\n    blocks[]{\n      \n  _type == \"hero-1\" => {\n    _type,\n    _key,\n    tagLine,\n    title,\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    image{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"hero-2\" => {\n    _type,\n    _key,\n    tagLine,\n    title,\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"hero-full\" => {\n    _type,\n    _key,\n    tagLine,\n    title,\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    images[]{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    image{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    height,\n    overlay,\n    frosted,\n    overlayStrength,\n    contentAlignment,\n    initialHeaderVisible,\n    enableFadeIn,\n  }\n,\n      \n  _type == \"hero-flex\" => {\n    _type,\n    _key,\n    variant,\n    minHeight,\n    minHeightCustom,\n    contentSpacing,\n    paddingStrategy,\n    paddingStrategyDesktop,\n    textAlign,\n    mobileOverrides {\n      textAlign,\n      title,\n      body[]{\n        \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n      },\n    },\n    invertText,\n    mobileStack,\n    mediaPosition,\n    eyebrow,\n    title,\n    titleStyles {\n      font,\n      size,\n      weight,\n      tracking,\n    },\n    titleBodySpacing,\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    ctas[]{\n      _key,\n      label,\n      href,\n      style,\n      ariaLabel,\n    },\n    media {\n      type,\n      widthMode,\n      widthValue,\n      maxWidth,\n      fit,\n      align,\n      autoAdvanceInterval,\n      lottieSize,\n      lottieHeight,\n      image {\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n      },\n      images[]{\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n      },\n      lottie {\n        autoplay,\n        loop,\n        speed,\n        ariaLabel,\n        file {\n          asset->{\n            _id,\n            url\n          }\n        }\n      }\n    },\n    background {\n      mode,\n      token,\n      color,\n      overlayOpacity,\n      image {\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n      },\n      gradient {\n        angle,\n        from,\n        to,\n      }\n    },\n    shape {\n      enabled,\n      type,\n      radius,\n      padding,\n      shadow,\n      fill,\n      color,\n      token,\n      image {\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n      },\n      lottie {\n        autoplay,\n        loop,\n        speed,\n        ariaLabel,\n        file {\n          asset->{\n            _id,\n            url\n          }\n        }\n      }\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"section-header\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    sectionWidth,\n    stackAlign,\n    tagLine,\n    title,\n    description[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    link{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"rich-text-block\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    colorVariantDark,\n    contentWidth,\n    textAlign,\n    fontFamily,\n    fontSize,\n    spacing,\n    textColorVariant,\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"lottie-animation\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    colorVariantDark,\n    sectionWidth,\n    animationAlign,\n    verticalSpacing,\n    animationSize,\n    title[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    textOrientation,\n    textPlacement,\n    textSpacing,\n    ariaLabel,\n    animation{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        size,\n        originalFilename\n      }\n    },\n    animationDark{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        size,\n        originalFilename\n      }\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"split-row\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    colorVariantDark,\n    sectionId,\n    noGap,\n    splitColumns[]{\n      \n  _type == \"split-content\" => {\n    _type,\n    _key,\n    sticky,\n    padding,\n    colorVariant,\n    tagLine,\n    title,\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    link{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n  }\n,\n      \n  _type == \"split-cards-list\" => {\n    _type,\n    _key,\n    list[]{\n      _key,\n      image{\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n      },\n      imageSize,\n      imageShape,\n      sizeBasis,\n      tagLine,\n      title,\n      body[]{\n        \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n      },\n    },\n  }\n,\n      \n  _type == \"split-image\" => {\n    _type,\n    _key,\n    image{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    imageLight{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    imageDark{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    imageSize,\n    imageShape,\n    aspectRatio,\n  }\n,\n      \n  _type == \"split-info-list\" => {\n    _type,\n    _key,\n    list[]{\n      image{\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n      },\n      title,\n      body[]{\n        \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n      },\n      tags[],\n    },\n  }\n,\n      \n  _type == \"rich-text-block\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    colorVariantDark,\n    contentWidth,\n    textAlign,\n    fontFamily,\n    fontSize,\n    spacing,\n    textColorVariant,\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"split-contact-form\" => {\n    _type,\n    _key,\n    heading,\n    body,\n    formspreeFormId,\n    submitButtonLabel,\n    successMessage,\n  }\n,\n      \n  _type == \"split-location-map\" => {\n    _type,\n    _key,\n    heading,\n    headingAlignment,\n    locationLabel,\n    locationName,\n    address,\n    latitude,\n    longitude,\n    mapZoom,\n  }\n,\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"grid-row\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    gridColumns,\n    columns[]{\n      \n  _type == \"grid-card\" => {\n    _type,\n    _key,\n    title,\n    excerpt,\n    image{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    link{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n  }\n,\n      \n  _type == \"pricing-card\" => {\n    _type,\n    _key,\n    title,\n    tagLine,\n    price,\n    list[],\n    excerpt,\n    link{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n  }\n,\n      \n  _type == \"grid-post\" => {\n    _type,\n    _key,\n    post->{\n      title,\n      slug,\n      excerpt,\n      image{\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n      },\n      categories[]->{\n        _id,\n        title,\n      },\n    },\n  }\n,\n      \n  _type == \"rich-text-block\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    colorVariantDark,\n    contentWidth,\n    textAlign,\n    fontFamily,\n    fontSize,\n    spacing,\n    textColorVariant,\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    enableFadeIn,\n  }\n,\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"carousel-1\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    size,\n    orientation,\n    indicators,\n    images[]{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"carousel-2\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    testimonial[]->{\n      _id,\n      name,\n      title,\n      image{\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n      },\n      body[]{\n        \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n      },\n      rating,\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"image-gallery\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    heading,\n    intro,\n    desktopColumns,\n    dateOrder,\n    images[]{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n,\n      alt,\n      caption,\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"before-after-gallery\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    heading,\n    intro,\n    items[]{\n      _key,\n      title,\n      description,\n      beforeLabel,\n      afterLabel,\n      beforeImage{\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n,\n        alt,\n      },\n      afterImage{\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n,\n        alt,\n      },\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"cloudinary-gallery\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    heading,\n    intro,\n    folderPrefix,\n    dateOrder,\n    images[]{\n      _key,\n      cloudinaryPublicId,\n      alt,\n      caption,\n      overrideUrl,\n      widthOverride,\n      heightOverride,\n      createdAtOverride,\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"testimonials-carousel\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    sectionId,\n    eyebrow,\n    heading,\n    intro,\n    testimonials[]->{\n      _id,\n      name,\n      title,\n      rating,\n      image{\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n      },\n      body[]{\n        \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n      },\n    },\n    cta {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"timeline-row\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    timelines[]{\n      title,\n      tagLine,\n      body[]{\n        \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n      },\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"cta-1\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    sectionWidth,\n    stackAlign,\n    tagLine,\n    title,\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"logo-cloud-1\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    title,\n    images[]{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"faqs\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    faqs[]->{\n      _id,\n      title,\n      body[]{\n        \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n      },\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"form-newsletter\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    stackAlign,\n    consentText,\n    buttonText,\n    successMessage,\n    enableFadeIn,\n  }\n,\n      \n  _type == \"form-contact\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    heading,\n    body,\n    formspreeFormId,\n    submitButtonLabel,\n    successMessage,\n    enableFadeIn,\n  }\n,\n      \n  _type == \"form-booking\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    heading,\n    body,\n    services,\n    availabilityNote,\n    submitButtonLabel,\n    successMessage,\n    outOfAreaMessage,\n    \"settings\": bookingSettings[0]->{\n      _id,\n      title,\n      servicePostcode,\n      serviceRadiusKm,\n      serviceLocation,\n      serviceAreaLabel,\n      successMessage,\n      notificationEmail,\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"form-booking-calendar\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    heading,\n    body,\n    calendarIntro,\n    services,\n    noticePeriodDays,\n    advanceWindowDays,\n    availabilityNote,\n    submitButtonLabel,\n    successMessage,\n    outOfAreaMessage,\n    \"settings\": bookingSettings[0]->{\n      _id,\n      title,\n      servicePostcode,\n      serviceRadiusKm,\n      serviceLocation,\n      serviceAreaLabel,\n      successMessage,\n      notificationEmail,\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"form-contact-map\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    heading,\n    body,\n    formspreeFormId,\n    submitButtonLabel,\n    successMessage,\n    locationName,\n    address,\n    latitude,\n    longitude,\n    mapZoom,\n    enableFadeIn,\n  }\n,\n      \n  _type == \"location-map\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    heading,\n    headingAlignment,\n    locationLabel,\n    locationName,\n    address,\n    latitude,\n    longitude,\n    mapZoom,\n    enableFadeIn,\n  }\n,\n      \n  _type == \"all-posts\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    enableFadeIn,\n  }\n,\n      \n  _type == \"menu-section\" => {\n    _type,\n    _key,\n    padding,\n    background{\n      style,\n      colorVariant,\n      texturePreset,\n      textureTint,\n      customImage{\n        \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n,\n        alt,\n        opacity\n      }\n    },\n    eyebrow,\n    title,\n    sectionId,\n    intro,\n    headingFont,\n    displayMode,\n    menuImages[]{\n      _key,\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n,\n      alt,\n      focus\n    },\n    imagePlacement,\n    imageLayout,\n    categories[]{\n      title,\n      description,\n      items[]{\n        _key,\n        name,\n        description,\n        price,\n        dietary,\n        itemImage{\n          \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n,\n          alt\n        }\n      }\n    },\n    lottieAnimation{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        size,\n        originalFilename\n      }\n    },\n    lottiePlacement,\n    enableFadeIn,\n  }\n,\n      \n  _type == \"menu-google-section\" => {\n    _type,\n    _key,\n    padding,\n    sectionId,\n    eyebrow,\n    title,\n    intro,\n    accordionBehaviour,\n    headingAlignment,\n    appearance{\n      backgroundColor,\n      backgroundColorDark,\n      panelColor,\n      panelColorDark,\n      accentColor,\n      accentColorDark,\n      headingColor,\n      headingColorDark,\n      tabColor,\n      tabColorDark,\n      categoryColor,\n      categoryColorDark,\n      borderColor,\n      borderColorDark\n    },\n    categories[]{\n      _key,\n      title,\n      tagline,\n      itemEntryMode,\n      items[]{\n        _key,\n        name,\n        price,\n        description,\n        dietary\n      },\n      rawItems\n    },\n    enableFadeIn,\n  }\n,\n      \n  _type == \"product-grid\" => {\n    _type,\n    _key,\n    heading,\n    description,\n    padding,\n    colorVariant,\n    selection {\n      mode,\n      products[]{\n        _key,\n        _ref,\n        _type\n      },\n      collection-> {\n        _id,\n        title,\n        slug\n      }\n    },\n    displayOptions {\n      columns,\n      showComparePrice,\n      showQuickView,\n      cardLayout\n    }\n  }\n,\n      \n  _type == \"shop-browser\" => {\n    _type,\n    _key,\n    hero {\n      enabled,\n      eyebrow,\n      heading,\n      subheading\n    },\n    overview {\n      label,\n      summaryTemplate\n    },\n    toolbar {\n      sortLabel,\n      sortOptions[]{\n        _key,\n        label,\n        value\n      },\n      views {\n        gridLabel,\n        listLabel\n      }\n    },\n    emptyState {\n      heading,\n      body\n    },\n    selection {\n      mode,\n      products[]{\n        _key,\n        _ref,\n        _type\n      },\n      collection\n    },\n    categoryFilters[]{\n      _key,\n      _ref,\n      _type\n    },\n    grid {\n      columns,\n      showComparePrice,\n      showQuickView,\n      cardLayout\n    },\n    padding,\n    colorVariant\n  }\n,\n    },\n    meta_title,\n    meta_description,\n    noindex,\n    ogImage {\n      asset->{\n        _id,\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n    }\n  }\n": PAGE_QUERYResult;
    "*[_type == \"page\" && defined(slug)]{slug}": PAGES_SLUGS_QUERYResult;
    "*[_type == \"post\" && slug.current == $slug][0]{\n    title,\n    slug,\n    image{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    author->{\n      name,\n      image {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      }\n    },\n    _createdAt,\n    _updatedAt,\n    meta_title,\n    meta_description,\n    noindex,\n    ogImage {\n      asset->{\n        _id,\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n    }\n}": POST_QUERYResult;
    "*[_type == \"post\" && defined(slug)] | order(_createdAt desc){\n    title,\n    slug,\n    excerpt,\n    image{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    _createdAt,\n}": POSTS_QUERYResult;
    "*[_type == \"post\" && defined(slug)]{slug}": POSTS_SLUGS_QUERYResult;
    "\n  *[_type == \"product\" && defined(slug.current)] | order(orderRank asc) {\n    \n  _id,\n  title,\n  slug,\n  price,\n  compareAtPrice,\n  excerpt,\n  images[]{\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n  }\n": PRODUCTS_QUERYResult;
    "\n  *[_type == \"product\" && _id in $ids] | order(orderRank asc) {\n    \n  _id,\n  title,\n  slug,\n  price,\n  compareAtPrice,\n  excerpt,\n  images[]{\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n  }\n": PRODUCTS_BY_IDS_QUERYResult;
    "\n  {\n    \"products\": *[_type == \"product\" && references($collectionId)] | order(orderRank asc) {\n      \n  _id,\n  title,\n  slug,\n  price,\n  compareAtPrice,\n  excerpt,\n  images[]{\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    }\n  }\n": COLLECTION_PRODUCTS_QUERYResult;
    "\n  *[_type == \"collection\"] | order(orderRank asc) {\n    _id,\n    title,\n    slug,\n    \"productIds\": *[_type == \"product\" && references(^._id)]._id\n  }\n": COLLECTIONS_QUERYResult;
    "\n  *[_type == \"collection\" && _id in $ids] | order(orderRank asc) {\n    _id,\n    title,\n    slug,\n    \"productIds\": *[_type == \"product\" && references(^._id)]._id\n  }\n": COLLECTIONS_BY_IDS_QUERYResult;
    "\n  *[_type == \"product\" && slug.current == $slug][0]{\n    _id,\n    title,\n    slug,\n    excerpt,\n    price,\n    compareAtPrice,\n    stock,\n    images[]{\n      \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n    },\n    body[]{\n      \n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      defined(anchor) && !defined(internalLink) => \"#\" + anchor,\n      defined(href) && !defined(internalLink) => href,\n      defined(anchor) && @.internalLink->slug.current == \"index\" => \"/#\" + anchor,\n      defined(anchor) && @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current + \"#\" + anchor,\n      defined(anchor) && defined(@.internalLink->slug.current) => \"/\" + @.internalLink->slug.current + \"#\" + anchor,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  _type == \"image\" => {\n    \n  ...,\n  asset->{\n    _id,\n    _createdAt,\n    url,\n    mimeType,\n    metadata {\n      lqip,\n      dimensions {\n        width,\n        height\n      }\n    }\n  }\n\n  }\n\n    },\n    variants[]{\n      title,\n      sku,\n      priceOverride,\n      stock,\n      options[]{\n        name,\n        value\n      }\n    },\n    meta_title,\n    meta_description,\n    noindex\n  }\n": PRODUCT_QUERYResult;
    "\n  *[_type == \"product\" && defined(slug.current)]{ slug }\n": PRODUCTS_SLUGS_QUERYResult;
    "*[_type == \"settings\"][0]{\n  _type,\n  siteName,\n  headerLogo{\n  dark{\n    ...,\n    asset->{\n      _id,\n      url,\n      mimeType,\n      metadata {\n        lqip,\n        dimensions {\n          width,\n          height\n        }\n      }\n    }\n  },\n  light{\n    ...,\n    asset->{\n      _id,\n      url,\n      mimeType,\n      metadata {\n        lqip,\n        dimensions {\n          width,\n          height\n        }\n      }\n    }\n  },\n  width,\n  height,\n},\n  footerLogo{\n  dark{\n    ...,\n    asset->{\n      _id,\n      url,\n      mimeType,\n      metadata {\n        lqip,\n        dimensions {\n          width,\n          height\n        }\n      }\n    }\n  },\n  light{\n    ...,\n    asset->{\n      _id,\n      url,\n      mimeType,\n      metadata {\n        lqip,\n        dimensions {\n          width,\n          height\n        }\n      }\n    }\n  },\n  width,\n  height,\n},\n  showSiteNameInHeader,\n  showSiteNameInFooter,\n  copyright\n}": SETTINGS_QUERYResult;
    "\n  {\n    \"hasShop\": count(*[_type == \"page\" && count(blocks[_type == \"shop-browser\"]) > 0]) > 0\n  }\n": SHOP_PRESENCE_QUERYResult;
  }
}
